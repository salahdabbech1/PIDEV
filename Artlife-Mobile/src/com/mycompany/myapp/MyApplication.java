package com.mycompany.myapp;

import com.codename1.capture.Capture;
import com.codename1.components.MultiButton;
import com.codename1.components.SpanLabel;
import com.codename1.components.ToastBar;
import com.codename1.io.FileSystemStorage;
import static com.codename1.ui.CN.*;
import com.codename1.ui.Display;
import com.codename1.ui.Form;
import com.codename1.ui.Dialog;
import com.codename1.ui.Label;
import com.codename1.ui.plaf.UIManager;
import com.codename1.ui.util.Resources;
import com.codename1.io.Log;
import com.codename1.ui.Toolbar;
import java.io.IOException;
import com.codename1.ui.layouts.BoxLayout;
import com.codename1.io.NetworkEvent;
import com.codename1.io.Util;
import com.codename1.l10n.SimpleDateFormat;
import com.codename1.media.Media;
import com.codename1.media.MediaManager;
import com.codename1.notifications.LocalNotification;
import com.codename1.ui.FontImage;
import com.codename1.ui.plaf.Style;
import com.mycompany.gui.AjoutCinemaForm;
import com.mycompany.gui.AjoutConcertForm;
import com.mycompany.gui.AjoutEvenementForm;
import com.mycompany.gui.AjoutFactorForm;
import com.mycompany.gui.AjoutFilmForm;
import com.mycompany.gui.AjoutMusicianForm;
import com.mycompany.gui.AjoutReclamationForm;
import com.mycompany.gui.AjoutTactorForm;
import com.mycompany.gui.AjoutTheatreForm;
import com.mycompany.gui.Excel;
import com.mycompany.gui.HomeBack;
import com.mycompany.gui.HomeFront;
import com.mycompany.gui.IndexCinema;
import com.mycompany.gui.IndexConcert;
import com.mycompany.gui.IndexEvenement;
import com.mycompany.gui.IndexFactorForm;
import com.mycompany.gui.IndexMovieForm;
import com.mycompany.gui.IndexTactorForm;
import com.mycompany.gui.IndexTheatreForm;
import com.mycompany.gui.ListCinemaForm;
import com.mycompany.gui.ListConcertForm;
import com.mycompany.gui.ListEvenementForm;
import com.mycompany.gui.ListFactorForm;
import com.mycompany.gui.ListMovieForm;
import com.mycompany.gui.ListMusicianForm;
import com.mycompany.gui.ListReclamationForm;
import com.mycompany.gui.ListTactorForm;
import com.mycompany.gui.ListTheatreForm;
import com.mycompany.gui.SignInForm;
import com.mycompany.gui.SignUpForm;
import com.mycompany.gui.StatForm;
import com.mycompany.gui.VoiceRecorder;
import com.mycompany.gui.welcomeForm;
import java.util.Date;
//import static com.mycompany.myapp.VoiceRecorderForm.recordAudio;

/**
 * This file was generated by <a href="https://www.codenameone.com/">Codename One</a> for the purpose 
 * of building native mobile applications using Java.
 */
public class MyApplication {

    private Form current;
    private Resources theme;

    public void init(Object context) {
        // use two network threads instead of one
        updateNetworkThreadCount(2);

        theme = UIManager.initFirstTheme("/theme");

        // Enable Toolbar on all Forms by default
        Toolbar.setGlobalToolbar(true);

        // Pro only feature
        Log.bindCrashProtection(true);

        addNetworkErrorListener(err -> {
            // prevent the event from propagating
            err.consume();
            if(err.getError() != null) {
                Log.e(err.getError());
            }
            Log.sendLogAsync();
            Dialog.show("Connection Error", "There was a networking error in the connection to " + err.getConnectionRequest().getUrl(), "OK", null);
        });        
    }
    
    public void start() {
        if(current != null){
            current.show();
            return;
        }
//        new AjoutTheatreForm(theme).show(); 
//  new welcomeForm(theme).show();
//        try {
//            new Excel();
//               new AjoutMusicianForm(theme).show();
//            testing();
//             
//        } catch (IOException ex) {
//            Logger.getLogger(MyApplication.class.getName()).log(Level.SEVERE, null, ex);
//           System.out.print("sdfsdf");
//        }
        
        
       new HomeFront(theme).show();/*yosri*/
        
        
        
        
        
        
        
    }

        public void testing(){
        
    }
    
    
    
    
    public void stop() {
        current = getCurrentForm();
        if(current instanceof Dialog) {
            ((Dialog)current).dispose();
            current = getCurrentForm();
        }
    }
    
    public void destroy() {
    }

}
